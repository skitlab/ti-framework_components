/* 
 * Copyright (c) 2012, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */
/*
 *  ======== package.bld ========
 *  Build script for RMAN IRES HDVICP protocol example.
 */

// explicit references to global objects
var Build = xdc.useModule('xdc.bld.BuildEnvironment');
var Pkg = xdc.useModule('xdc.bld.PackageContents');
var BuildHelp = xdc.useModule('ti.sdo.tools.build.PackageBuildHelp');
BuildHelp.usePlatformInstanceName = true;

/* add appropriate main.c source file */
BuildHelp.skipExec = function(prog, targ, platName, execAttrs)
{
    if (targ.os == undefined) {
        prog.sources.$add("main_BIOS.c");
    }
    else {
        prog.sources.$add("main_native.c");
    }

    /* don't skip executable */
    return (false);
}



/* bin/ is a generated directory that 'xdc clean' should remove */
Pkg.generatedFiles = [ "bin/" ];

Pkg.otherFiles = [
    "package.bld",
    "makefile"
];

var Attrs = Pkg.attrs; 

Attrs.exportAll = true;
Attrs.exportExe = false;

// check if platform specified in XDCARGS, 'arguments' is XDCARGS
// XDCARGS="... platform=ti.platforms.evm3530 ..."
var cmdPlat = (" " + arguments.join(" ") + " ").match(/ platform=([^ ]+) /);
cmdPlat = cmdPlat != null ? cmdPlat[1] : null;

// check if profile specified in XDCARGS, 'arguments' is XDCARGS
// XDCARGS="... profile=debug ..."
var cmdProf = (" " + arguments.join(" ") + " ").match(/ profile=([^ ]+) /);
cmdProf = cmdProf != null ? cmdProf[1] : null;


// list of preferred profiles to build for
var profileAry = [ "debug", /* "release" */];

// list of programs to build
var progArray = new Array();
progArray.push(
    new BuildHelp.ProgAttrs({
    name: "hdvicp",
    isas: ["v7M"],  
    platforms: [ "ti.platforms.evmTI816X"],
    sources: ["ires_algorithm", "app_ducati",
                  "myHdvicp",
            ],
    execAttrs: {
      cfgScript: "ires_algorithm.cfg",
        defs   : " -D_DUCATI ",
    }   
    })
);


/* generate the package executables */
BuildHelp.makeExecutables(progArray, arguments, ["release"]);
/*
 *  @(#) ti.sdo.fc.rman.examples.plugin; 1, 0, 0,4; 2-22-2012 18:08:07; /db/atree/library/trees/fc/fc-q07/src/ xlibrary

 */

