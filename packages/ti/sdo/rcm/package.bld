/* 
 * Copyright (c) 2012, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */


/*
 *  ======== package.bld ========
 *
 */

/* explicit references to global objects */
var Build = xdc.useModule('xdc.bld.BuildEnvironment');
var Pkg = xdc.useModule('xdc.bld.PackageContents');

/* use common package build support */
var BuildHelp = xdc.useModule('ti.sdo.tools.build.PackageBuildHelp');

BuildHelp.skipLib = function(lib, targ)
{
    var skipIt;

    if (lib.name.match(/syslink/)) {
        /* build rcm_syslink.a only for non-BIOS targets */
        skipIt = (targ.os == undefined);
    }
    else {
        /* build rcm.a only for BIOS targets */
        skipIt = (targ.os != undefined);
    }

//    print("skipLib " + lib.name + ", targ: " + targ.name + ", targ.os " +
//          targ.os + " " + skipIt);
    return (skipIt);
};

/* clean lib folder */
Pkg.generatedFiles.$add("lib/");
Pkg.generatedFiles.$add("nocfg/");
Pkg.generatedFiles.$add("nocfg.mak");
Pkg.libDir = "package/";

/* add custom makefiles to build model */
Pkg.makePrologue =
    "-include prologue.mak\n" +
    "-include docs.mak\n";

/* add custom files to all releases */
Pkg.attrs.exportAll = true;
Pkg.otherFiles = [
    "doc-files/",
    "package.bld",
    "RcmClient.h",
    "RcmServer.h",
    "RcmTypes.h",
    "simple_GCArmv5T.mak"
];

// list of libraries to build
var libArray = new Array();

// rcm with ti.sdo.ipc
libArray.push(
    new BuildHelp.LibAttrs({
        name: "rcm",
        sources: [
            "RcmClient.c",
            "RcmServer.c",
            "RcmUtils.c"
        ],
        libAttrs: {
            defs: "-DRCM_ti_sdo_ipc"
        }
    })
);

// rcm with ti.syslink (ARM only)
libArray.push(
    new BuildHelp.LibAttrs({
        name: "rcm_syslink",
        sources: [
            "RcmClient.c",
            "RcmServer.c",
            "RcmUtils.c"
        ],
        libAttrs: {
            defs: "-DRCM_ti_syslink"
        },
        icw: [ "v5T", "v7A" ]
    })
);

/* generate the package libraries */
BuildHelp.makeLibraries(libArray, arguments);
/*
 *  @(#) ti.sdo.rcm; 2, 0, 0,4; 2-22-2012 18:09:55; /db/atree/library/trees/fc/fc-q07/src/ xlibrary

 */

