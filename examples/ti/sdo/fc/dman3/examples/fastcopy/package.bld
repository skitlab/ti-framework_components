/* 
 * Copyright (c) 2012, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */
/*
 *  ======== package.bld ========
 *  Build script for an example app that services requests from an alg 
 *  requesting IRES EDMA3CHAN resources. 
 *
 */

/* explicit references to global objects */
var Build = xdc.useModule('xdc.bld.BuildEnvironment');
var Pkg = xdc.useModule('xdc.bld.PackageContents');

/* use common package build support */
var BuildHelp = xdc.useModule('ti.sdo.tools.build.PackageBuildHelp');
BuildHelp.usePlatformInstanceName = true;

/* clean bin folder */
Pkg.generatedFiles.$add("bin/");

/* add custom files to all releases */
Pkg.attrs.exportCfg = true;
Pkg.attrs.exportDoc = true;
Pkg.attrs.exportSrc = false;
Pkg.attrs.exportExe = false;
Pkg.attrs.exportAll = true;


Pkg.otherFiles = [
    "package.bld",
    "evmDM6446",
    "evmDM6437",
    "evmDM6467",
    "evmDM648",
    "dsk6455",
    "evm3530",
    "evmTI814X",
    "evmTI816X",

    /* and the headers and templates */
    "fcpy.h",
    "fcpy_ti.h",
    "fcpy_ti_priv.h",
    "ifcpy.h",

];

/*
var libArray = new Array();

libArray.push(
    {   
        name: "fcpy_ti",
        sources: [
            "fcpy_ti.c",
            "fcpy_ti_ialg.c",
            "fcpy_ti_idma3.c",
            "fcpy_ti_idma3vt.c",
            "fcpy_ti_ifcpy.c",
            "fcpy_ti_ifcpyvt.c"
        ],
        libAttrs: {
            defs: "" 
        },
    }
);

BuildHelp.makeLibraries(libArray, arguments);
*/

var progArray = new Array();

var srcArray =  [
    "fastcopytest.c",
    "mySem.c",
    "fcpy.c",
    "ifcpy.c",
/* Adding these here for now, because of lib issues */
    "fcpy_ti.c",
    "fcpy_ti_ialg.c",
    "fcpy_ti_idma3.c",
    "fcpy_ti_idma3vt.c",
    "fcpy_ti_ifcpy.c",
    "fcpy_ti_ifcpyvt.c",
];

progArray.push( {
    name:    "fastcopytest_bios",
    sources: srcArray,
    execAttrs: {
        cfgScript: "fastcopytest.cfg",
    }
});

for (i = 0; i < srcArray.length; i++) {
    Pkg.otherFiles.$add(srcArray[i]);
}

BuildHelp.skipTarget = function(targ)
{
    if (targ.$name.match(/M3/)) {
        return (true)
    }
    return (false);
}

/* don't build for some of these targets */
BuildHelp.skipPlatform = function(platName, target)
{
    if (platName.match(/test_dsp/) && (
            platName.match(/dsk6455/) ||
            platName.match(/evm3530/) ||
            platName.match(/evmDM648/) ||
            platName.match(/evmDM6437/) ||
            platName.match(/evmDM6446/) ||
            platName.match(/evmTI816X/) ||
            platName.match(/evmTI814X/) ||
            platName.match(/evmDM6467/))) {
        return (false);
    }
        
    /* No support yet */
    if (platName.match(/DA830/) || platName.match(/8168/) || platName.match(/sdp4430/)) {
        return (true);
    }

    /* Haven't added support for Multicore devices yet */
    if (platName.match(/647|6608|6616/)) {    
        //print("Skipping platform " + platName);
        return (true);
    }

    // Skip all other platforms
    return (true);
}

/* generate the package executables */
BuildHelp.makeExecutables(progArray, arguments, ["debug"]);
/*
 *  @(#) ti.sdo.fc.dman3.examples.fastcopy; 1, 0, 0,4; 2-22-2012 18:03:25; /db/atree/library/trees/fc/fc-q07/src/ xlibrary

 */

